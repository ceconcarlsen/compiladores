   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PROGRAM . LexToken(ID,'while_1',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PROGRAM ID . LexToken(FIM_LINHA,';',1,15)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA . LexToken(INT,'int',2,17)
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 6
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope . LexToken(INT,'int',2,17)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope INT . LexToken(ID,'x',2,21)
   yacc.py: 469:Action : Reduce rule [tipo_simples -> INT] with ['int'] and goto state 12
   yacc.py: 506:Result : <str @ 0x1c23a25cd30> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples . LexToken(ID,'x',2,21)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples ID . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples variavel . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples fator . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples termo . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao_simples . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao . LexToken(SEPARADOR,',',2,22)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR . LexToken(ID,'y',2,24)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR ID . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR variavel . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR fator . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR termo . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao_simples . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao . LexToken(SEPARADOR,',',2,25)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR . LexToken(ID,'count',2,27)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR ID . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c23a3a6330> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR variavel . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c23a3a6330> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR fator . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c23a3a6330> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR termo . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c23a3a6330> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao_simples . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['count'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c23a3a6330> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao empty . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['count',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x1c2388f0700> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['count']] and goto state 53
   yacc.py: 506:Result : <list @ 0x1c2388f0700> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['count']] and goto state 85
   yacc.py: 506:Result : <list @ 0x1c2388f0bc0> (['y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y', 'count']] and goto state 53
   yacc.py: 506:Result : <list @ 0x1c2388f0bc0> (['y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y', 'count']] and goto state 23
   yacc.py: 506:Result : <list @ 0x1c2383d9680> (['x', 'y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 430:Defaulted state 23: Reduce using 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [declaracao_de_variaveis -> tipo_simples lista_de_parametros] with ['int',<list @ 0x1c2383d9680>] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x1c23a244b80> (('int', ['x', 'y', 'count']))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA . LexToken(BEGIN,'begin',4,35)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 11
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA empty . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> empty] with [None] and goto state 52
   yacc.py: 506:Result : <list @ 0x1c23a248040> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis] with [<tuple @ 0x1c23a244b80>,';',[]] and goto state 9
   yacc.py: 506:Result : <list @ 0x1c2388f0700> ([('int', ['x', 'y', 'count'])])
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,35)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 20
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 430:Defaulted state 20: Reduce using 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis empty . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_subrotinas -> empty] with [None] and goto state 18
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 430:Defaulted state 18: Reduce using 3
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [bloco -> new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas] with [None,<list @ 0x1c2388f0700>,None] and goto state 5
   yacc.py: 506:Result : <tuple @ 0x1c23a244ec0> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco . LexToken(BEGIN,'begin',4,35)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN . LexToken(READ,'read',5,42)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin . LexToken(READ,'read',5,42)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ . LexToken(AP,'(',5,46)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP . LexToken(ID,'x',5,47)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP ID . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP variavel . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP fator . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP termo . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao_simples . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao . LexToken(SEPARADOR,',',5,48)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR . LexToken(ID,'y',5,50)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR ID . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR variavel . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR fator . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR termo . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao_simples . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao . LexToken(FP,')',5,51)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao empty . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x1c2388f0bc0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y']] and goto state 53
   yacc.py: 506:Result : <list @ 0x1c2388f0bc0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao mais_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y']] and goto state 99
   yacc.py: 506:Result : <list @ 0x1c23a248040> (['x', 'y'])
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros . LexToken(FP,')',5,51)
   yacc.py: 445:Action : Shift and goto state 109
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 430:Defaulted state 109: Reduce using 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> READ AP lista_de_parametros FP] with ['read','(',['x', 'y'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',5,52)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(WHILE,'while',6,55)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE . LexToken(AP,'(',6,61)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP . LexToken(ID,'x',6,62)
   yacc.py: 473:Action : Reduce rule [set_expressao -> <empty>] with [] and goto state 102
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao . LexToken(ID,'x',6,62)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao ID . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao variavel . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao fator . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao termo . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples . LexToken(MENOR,'<',6,64)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples MENOR . LexToken(ID,'y',6,66)
   yacc.py: 469:Action : Reduce rule [relacao -> MENOR] with ['<'] and goto state 56
   yacc.py: 506:Result : <str @ 0x1c2383471f0> ('<')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao . LexToken(ID,'y',6,66)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao ID . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao variavel . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao fator . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao termo . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 86
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao expressao_simples . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['x','<','y'] and goto state 112
   yacc.py: 506:Result : <bool @ 0x7ffd1c18d770> (False)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 430:Defaulted state 112: Reduce using 36
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao . LexToken(FP,')',6,67)
   yacc.py: 473:Action : Reduce rule [verifica_WHILE -> <empty>] with [] and goto state 118
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE . LexToken(FP,')',6,67)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP . LexToken(DO,'do',6,69)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO . LexToken(BEGIN,'begin',7,73)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN . LexToken(WRITE,'write',8,81)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin . LexToken(WRITE,'write',8,81)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE . LexToken(AP,'(',8,86)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP . LexToken(ID,'x',8,87)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP ID . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP variavel . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP fator . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP termo . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao_simples . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao . LexToken(FP,')',8,88)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao empty . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao mais_parametros . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',None] and goto state 100
   yacc.py: 506:Result : <list @ 0x1c23a252d80> (['x'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros . LexToken(FP,')',8,88)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['x'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',8,89)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(ID,'x',9,93)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',9,95)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',9,95)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'x',9,98)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',9,100)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(NUM_INT,1,9,102)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA NUM_INT . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA numero . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1730> (2)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [2] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1730> (2)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',2] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1c23a3a6400> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(END,'end',10,106)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA empty . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1c23a3a6400>,';',None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x1c23a246100> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x1c23a246100>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1c23a244ac0> ((None, ({'lexema': 'x', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos . LexToken(END,'end',10,106)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos END . LexToken(ID,'y',11,111)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1c23a244ac0>,'end'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto . LexToken(ID,'y',11,111)
   yacc.py: 473:Action : Reduce rule [desvio_WHILE -> <empty>] with [] and goto state 133
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE . LexToken(ID,'y',11,111)
   yacc.py: 469:Action : Reduce rule [comando_repetitivo_1 -> WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE] with ['while','(',None,False,None,')','do',None,None] and goto state 44
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 . LexToken(ID,'y',11,111)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 ID . LexToken(OPIGUAL_ATRIB,':=',11,113)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel . LexToken(OPIGUAL_ATRIB,':=',11,113)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB . LexToken(NUM_INT,1,11,116)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1c23a3a63c0> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA . LexToken(ID,'x',12,120)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',12,122)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',12,122)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(NUM_INT,45,12,125)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB NUM_INT . LexToken(OPDIV,'/',12,127)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [45] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB numero . LexToken(OPDIV,'/',12,127)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [45] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPDIV,'/',12,127)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [45] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPDIV,'/',12,127)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo OPDIV . LexToken(ID,'y',12,128)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo OPDIV ID . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo OPDIV variavel . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 91
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo OPDIV fator . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [termo -> termo OPDIV fator] with [45,'/','y'] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [45] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [45] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',45] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1c23a3a6400> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA . LexToken(ID,'count',13,132)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',13,138)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1c23a3a6d70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',13,138)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(NUM_INT,0,13,141)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d16f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d16f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd1c1d16f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d16f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [0] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd1c1d16f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['count',':=',0] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1c23a3a6480> ({'lexema': 'count', 'tipo': 'int', 'valo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA . LexToken(WHILE,'while',15,146)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE . LexToken(AP,'(',15,151)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP . LexToken(ID,'count',15,152)
   yacc.py: 473:Action : Reduce rule [set_expressao -> <empty>] with [] and goto state 102
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao . LexToken(ID,'count',15,152)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao ID . LexToken(MENOR_IGUAL,'<=',15,158)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c23a3a6cf0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao variavel . LexToken(MENOR_IGUAL,'<=',15,158)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c23a3a6cf0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao fator . LexToken(MENOR_IGUAL,'<=',15,158)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c23a3a6cf0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao termo . LexToken(MENOR_IGUAL,'<=',15,158)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c23a3a6cf0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples . LexToken(MENOR_IGUAL,'<=',15,158)
   yacc.py: 445:Action : Shift and goto state 63
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples MENOR_IGUAL . LexToken(NUM_INT,45,15,161)
   yacc.py: 469:Action : Reduce rule [relacao -> MENOR_IGUAL] with ['<='] and goto state 56
   yacc.py: 506:Result : <str @ 0x1c23a3a6d70> ('<=')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao . LexToken(NUM_INT,45,15,161)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao NUM_INT . LexToken(FP,')',15,163)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [45] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao numero . LexToken(FP,')',15,163)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [45] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao fator . LexToken(FP,')',15,163)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [45] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao termo . LexToken(FP,')',15,163)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [45] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao expressao_simples . LexToken(FP,')',15,163)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['count','<=',45] and goto state 112
   yacc.py: 506:Result : <bool @ 0x7ffd1c18d750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 430:Defaulted state 112: Reduce using 36
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao . LexToken(FP,')',15,163)
   yacc.py: 473:Action : Reduce rule [verifica_WHILE -> <empty>] with [] and goto state 118
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE . LexToken(FP,')',15,163)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP . LexToken(DO,'do',15,165)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO . LexToken(BEGIN,'begin',16,170)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN . LexToken(WRITE,'write',17,178)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin . LexToken(WRITE,'write',17,178)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE . LexToken(AP,'(',17,183)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP . LexToken(ID,'count',17,184)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP ID . LexToken(SEPARADOR,',',17,189)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c23a3a6eb0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP variavel . LexToken(SEPARADOR,',',17,189)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c23a3a6eb0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP fator . LexToken(SEPARADOR,',',17,189)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c23a3a6eb0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP termo . LexToken(SEPARADOR,',',17,189)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c23a3a6eb0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao_simples . LexToken(SEPARADOR,',',17,189)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['count'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c23a3a6eb0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao . LexToken(SEPARADOR,',',17,189)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR . LexToken(ID,'count',17,191)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR ID . LexToken(OPSOMA,'+',17,197)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c23a3a6f70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR variavel . LexToken(OPSOMA,'+',17,197)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c23a3a6f70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR fator . LexToken(OPSOMA,'+',17,197)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c23a3a6f70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR termo . LexToken(OPSOMA,'+',17,197)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c23a3a6f70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples . LexToken(OPSOMA,'+',17,197)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples OPSOMA . LexToken(NUM_INT,1,17,199)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples OPSOMA NUM_INT . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples OPSOMA numero . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples OPSOMA fator . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples OPSOMA termo . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['count','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 24
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao . LexToken(FP,')',17,200)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao empty . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with [1,None] and goto state 85
   yacc.py: 506:Result : <list @ 0x1c2388f0bc0> ([1])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',[1]] and goto state 53
   yacc.py: 506:Result : <list @ 0x1c2388f0bc0> ([1])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao mais_parametros . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['count',[1]] and goto state 100
   yacc.py: 506:Result : <list @ 0x1c23a252d80> (['count', 1])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros . LexToken(FP,')',17,200)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['count', 1],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',17,201)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(ID,'count',18,205)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',18,211)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1c23a3b11f0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',18,211)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'count',18,214)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',18,220)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c23a3b1230> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',18,220)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c23a3b1230> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',18,220)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c23a3b1230> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',18,220)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c23a3b1230> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',18,220)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(NUM_INT,1,18,222)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA NUM_INT . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA numero . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['count','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['count',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1c23a3a6480> ({'lexema': 'count', 'tipo': 'int', 'valo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(END,'end',19,226)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA empty . LexToken(END,'end',19,226)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',19,226)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1c23a3a6480>,';',None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x1c23a244ac0> (({'lexema': 'count', 'tipo': 'int', 'val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',19,226)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x1c23a244ac0>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1c23a246100> ((None, ({'lexema': 'count', 'tipo': 'int ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos . LexToken(END,'end',19,226)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos END . LexToken(END,'end',20,230)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1c23a246100>,'end'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto . LexToken(END,'end',20,230)
   yacc.py: 473:Action : Reduce rule [desvio_WHILE -> <empty>] with [] and goto state 133
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE . LexToken(END,'end',20,230)
   yacc.py: 469:Action : Reduce rule [comando_repetitivo_1 -> WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE] with ['while','(',None,True,None,')','do',None,None] and goto state 44
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 . LexToken(END,'end',20,230)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 empty . LexToken(END,'end',20,230)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 76
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 comandos . LexToken(END,'end',20,230)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_repetitivo_1 comandos] with [None,None] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x1c23a246100> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',20,230)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1c23a3a6480>,';',(None, None)] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x1c23a244ac0> (({'lexema': 'count', 'tipo': 'int', 'val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',20,230)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1c23a3a6400>,';',<tuple @ 0x1c23a244ac0>] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x1c23a244b40> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA comandos . LexToken(END,'end',20,230)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1c23a3a63c0>,';',<tuple @ 0x1c23a244b40>] and goto state 76
   yacc.py: 506:Result : <tuple @ 0x1c23a244cc0> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 comandos . LexToken(END,'end',20,230)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_repetitivo_1 comandos] with [None,<tuple @ 0x1c23a244cc0>] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x1c23a244d40> ((None, ({'lexema': 'y', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',20,230)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x1c23a244d40>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1c23a244e40> ((None, (None, ({'lexema': 'y', 'tipo': ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos . LexToken(END,'end',20,230)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos END . LexToken(PONTO_FINAL,'.',20,233)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1c23a244e40>,'end'] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto . LexToken(PONTO_FINAL,'.',20,233)
   yacc.py: 445:Action : Shift and goto state 16
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 2
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL . None
   yacc.py: 473:Action : Reduce rule [fim_programa -> <empty>] with [] and goto state 38
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 430:Defaulted state 38: Reduce using 1
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa . None
   yacc.py: 469:Action : Reduce rule [programa -> PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa] with ['program','while_1',';',<tuple @ 0x1c23a244ec0>,None,'.',None] and goto state 1
   yacc.py: 506:Result : <tuple @ 0x1c23a244ec0> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : programa . $end
   yacc.py: 571:Done   : Returning <tuple @ 0x1c23a244ec0> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 572:PLY: PARSE DEBUG END
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PROGRAM . LexToken(ID,'while_1',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PROGRAM ID . LexToken(FIM_LINHA,';',1,15)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA . LexToken(INT,'int',2,17)
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 6
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope . LexToken(INT,'int',2,17)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope INT . LexToken(ID,'x',2,21)
   yacc.py: 469:Action : Reduce rule [tipo_simples -> INT] with ['int'] and goto state 12
   yacc.py: 506:Result : <str @ 0x1c23a3b6db0> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples . LexToken(ID,'x',2,21)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples ID . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples variavel . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples fator . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples termo . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao_simples . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao . LexToken(SEPARADOR,',',2,22)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR . LexToken(ID,'y',2,24)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR ID . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR variavel . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR fator . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR termo . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao_simples . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao . LexToken(SEPARADOR,',',2,25)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR . LexToken(ID,'count',2,27)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR ID . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c23a3bf2b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR variavel . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c23a3bf2b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR fator . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c23a3bf2b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR termo . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c23a3bf2b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao_simples . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['count'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c23a3bf2b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao empty . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['count',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x1c23a24bf80> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['count']] and goto state 53
   yacc.py: 506:Result : <list @ 0x1c23a24bf80> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['count']] and goto state 85
   yacc.py: 506:Result : <list @ 0x1c23a246cc0> (['y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y', 'count']] and goto state 53
   yacc.py: 506:Result : <list @ 0x1c23a246cc0> (['y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y', 'count']] and goto state 23
   yacc.py: 506:Result : <list @ 0x1c23a252d80> (['x', 'y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 430:Defaulted state 23: Reduce using 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [declaracao_de_variaveis -> tipo_simples lista_de_parametros] with ['int',<list @ 0x1c23a252d80>] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x1c23a244440> (('int', ['x', 'y', 'count']))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA . LexToken(BEGIN,'begin',4,35)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 11
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA empty . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> empty] with [None] and goto state 52
   yacc.py: 506:Result : <list @ 0x1c23a3b6d00> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis] with [<tuple @ 0x1c23a244440>,';',[]] and goto state 9
   yacc.py: 506:Result : <list @ 0x1c23a24bf80> ([('int', ['x', 'y', 'count'])])
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,35)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 20
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 430:Defaulted state 20: Reduce using 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis empty . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_subrotinas -> empty] with [None] and goto state 18
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 430:Defaulted state 18: Reduce using 3
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [bloco -> new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas] with [None,<list @ 0x1c23a24bf80>,None] and goto state 5
   yacc.py: 506:Result : <tuple @ 0x1c23a2445c0> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco . LexToken(BEGIN,'begin',4,35)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN . LexToken(READ,'read',5,42)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin . LexToken(READ,'read',5,42)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ . LexToken(AP,'(',5,46)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP . LexToken(ID,'x',5,47)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP ID . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP variavel . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP fator . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP termo . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao_simples . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao . LexToken(SEPARADOR,',',5,48)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR . LexToken(ID,'y',5,50)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR ID . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR variavel . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR fator . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR termo . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao_simples . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao . LexToken(FP,')',5,51)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao empty . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x1c23a246cc0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y']] and goto state 53
   yacc.py: 506:Result : <list @ 0x1c23a246cc0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao mais_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y']] and goto state 99
   yacc.py: 506:Result : <list @ 0x1c23a3b6d00> (['x', 'y'])
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros . LexToken(FP,')',5,51)
   yacc.py: 445:Action : Shift and goto state 109
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 430:Defaulted state 109: Reduce using 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> READ AP lista_de_parametros FP] with ['read','(',['x', 'y'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',5,52)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(WHILE,'while',6,55)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE . LexToken(AP,'(',6,61)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP . LexToken(ID,'x',6,62)
   yacc.py: 473:Action : Reduce rule [set_expressao -> <empty>] with [] and goto state 102
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao . LexToken(ID,'x',6,62)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao ID . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao variavel . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao fator . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao termo . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples . LexToken(MENOR,'<',6,64)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples MENOR . LexToken(ID,'y',6,66)
   yacc.py: 469:Action : Reduce rule [relacao -> MENOR] with ['<'] and goto state 56
   yacc.py: 506:Result : <str @ 0x1c2383471f0> ('<')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao . LexToken(ID,'y',6,66)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao ID . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao variavel . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao fator . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao termo . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 86
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao expressao_simples . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['x','<','y'] and goto state 112
   yacc.py: 506:Result : <bool @ 0x7ffd1c18d770> (False)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 430:Defaulted state 112: Reduce using 36
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao . LexToken(FP,')',6,67)
   yacc.py: 473:Action : Reduce rule [verifica_WHILE -> <empty>] with [] and goto state 118
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE . LexToken(FP,')',6,67)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP . LexToken(DO,'do',6,69)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO . LexToken(BEGIN,'begin',7,73)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN . LexToken(WRITE,'write',8,81)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin . LexToken(WRITE,'write',8,81)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE . LexToken(AP,'(',8,86)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP . LexToken(ID,'x',8,87)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP ID . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP variavel . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP fator . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP termo . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao_simples . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao . LexToken(FP,')',8,88)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao empty . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao mais_parametros . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',None] and goto state 100
   yacc.py: 506:Result : <list @ 0x1c23a248040> (['x'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros . LexToken(FP,')',8,88)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['x'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',8,89)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(ID,'x',9,93)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',9,95)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',9,95)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'x',9,98)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',9,100)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(NUM_INT,1,9,102)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA NUM_INT . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA numero . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1730> (2)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [2] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1730> (2)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',2] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1c23a3bf380> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(END,'end',10,106)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA empty . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1c23a3bf380>,';',None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x1c23a252300> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x1c23a252300>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1c23a2446c0> ((None, ({'lexema': 'x', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos . LexToken(END,'end',10,106)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos END . LexToken(ID,'y',11,111)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1c23a2446c0>,'end'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto . LexToken(ID,'y',11,111)
   yacc.py: 473:Action : Reduce rule [desvio_WHILE -> <empty>] with [] and goto state 133
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE . LexToken(ID,'y',11,111)
   yacc.py: 469:Action : Reduce rule [comando_repetitivo_1 -> WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE] with ['while','(',None,False,None,')','do',None,None] and goto state 44
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 . LexToken(ID,'y',11,111)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 ID . LexToken(OPIGUAL_ATRIB,':=',11,113)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel . LexToken(OPIGUAL_ATRIB,':=',11,113)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB . LexToken(NUM_INT,1,11,116)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1c23a3bf340> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao . LexToken(FIM_LINHA,';',11,117)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA . LexToken(ID,'x',12,120)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',12,122)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1c237d84530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',12,122)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(NUM_INT,45,12,125)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB NUM_INT . LexToken(OPDIV,'/',12,127)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [45] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB numero . LexToken(OPDIV,'/',12,127)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [45] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPDIV,'/',12,127)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [45] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPDIV,'/',12,127)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo OPDIV . LexToken(ID,'y',12,128)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo OPDIV ID . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo OPDIV variavel . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 91
   yacc.py: 506:Result : <str @ 0x1c237f61c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo OPDIV fator . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [termo -> termo OPDIV fator] with [45,'/','y'] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [45] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [45] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',45] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1c23a3bf380> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',12,129)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA . LexToken(ID,'count',13,132)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',13,138)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1c23a3bfcf0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',13,138)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(NUM_INT,0,13,141)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d16f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d16f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd1c1d16f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d16f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [0] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd1c1d16f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['count',':=',0] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1c23a3bf400> ({'lexema': 'count', 'tipo': 'int', 'valo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',13,142)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA . LexToken(WHILE,'while',15,146)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE . LexToken(AP,'(',15,151)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP . LexToken(ID,'count',15,152)
   yacc.py: 473:Action : Reduce rule [set_expressao -> <empty>] with [] and goto state 102
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao . LexToken(ID,'count',15,152)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao ID . LexToken(MENOR_IGUAL,'<=',15,158)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c23a3bfc70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao variavel . LexToken(MENOR_IGUAL,'<=',15,158)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c23a3bfc70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao fator . LexToken(MENOR_IGUAL,'<=',15,158)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c23a3bfc70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao termo . LexToken(MENOR_IGUAL,'<=',15,158)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c23a3bfc70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples . LexToken(MENOR_IGUAL,'<=',15,158)
   yacc.py: 445:Action : Shift and goto state 63
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples MENOR_IGUAL . LexToken(NUM_INT,45,15,161)
   yacc.py: 469:Action : Reduce rule [relacao -> MENOR_IGUAL] with ['<='] and goto state 56
   yacc.py: 506:Result : <str @ 0x1c23a3bfcf0> ('<=')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao . LexToken(NUM_INT,45,15,161)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao NUM_INT . LexToken(FP,')',15,163)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [45] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao numero . LexToken(FP,')',15,163)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [45] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao fator . LexToken(FP,')',15,163)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [45] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao termo . LexToken(FP,')',15,163)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [45] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao expressao_simples . LexToken(FP,')',15,163)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['count','<=',45] and goto state 112
   yacc.py: 506:Result : <bool @ 0x7ffd1c18d750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 430:Defaulted state 112: Reduce using 36
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao . LexToken(FP,')',15,163)
   yacc.py: 473:Action : Reduce rule [verifica_WHILE -> <empty>] with [] and goto state 118
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE . LexToken(FP,')',15,163)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP . LexToken(DO,'do',15,165)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO . LexToken(BEGIN,'begin',16,170)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN . LexToken(WRITE,'write',17,178)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin . LexToken(WRITE,'write',17,178)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE . LexToken(AP,'(',17,183)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP . LexToken(ID,'count',17,184)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP ID . LexToken(SEPARADOR,',',17,189)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c23a3bfe30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP variavel . LexToken(SEPARADOR,',',17,189)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c23a3bfe30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP fator . LexToken(SEPARADOR,',',17,189)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c23a3bfe30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP termo . LexToken(SEPARADOR,',',17,189)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c23a3bfe30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao_simples . LexToken(SEPARADOR,',',17,189)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['count'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1c23a3bfe30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao . LexToken(SEPARADOR,',',17,189)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR . LexToken(ID,'count',17,191)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR ID . LexToken(OPSOMA,'+',17,197)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c23a3bff30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR variavel . LexToken(OPSOMA,'+',17,197)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c23a3bff30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR fator . LexToken(OPSOMA,'+',17,197)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c23a3bff30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR termo . LexToken(OPSOMA,'+',17,197)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c23a3bff30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples . LexToken(OPSOMA,'+',17,197)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples OPSOMA . LexToken(NUM_INT,1,17,199)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples OPSOMA NUM_INT . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples OPSOMA numero . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples OPSOMA fator . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples OPSOMA termo . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['count','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao_simples . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 24
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao . LexToken(FP,')',17,200)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao empty . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with [1,None] and goto state 85
   yacc.py: 506:Result : <list @ 0x1c23a246cc0> ([1])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',[1]] and goto state 53
   yacc.py: 506:Result : <list @ 0x1c23a246cc0> ([1])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao mais_parametros . LexToken(FP,')',17,200)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['count',[1]] and goto state 100
   yacc.py: 506:Result : <list @ 0x1c23a248040> (['count', 1])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros . LexToken(FP,')',17,200)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['count', 1],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',17,201)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(ID,'count',18,205)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',18,211)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1c23a3bff30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',18,211)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'count',18,214)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',18,220)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c23a3bfe30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',18,220)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c23a3bfe30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',18,220)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c23a3bfe30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',18,220)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c23a3bfe30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',18,220)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(NUM_INT,1,18,222)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA NUM_INT . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA numero . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['count','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['count',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1c23a3bf400> ({'lexema': 'count', 'tipo': 'int', 'valo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',18,223)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(END,'end',19,226)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA empty . LexToken(END,'end',19,226)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',19,226)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1c23a3bf400>,';',None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x1c23a2446c0> (({'lexema': 'count', 'tipo': 'int', 'val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',19,226)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x1c23a2446c0>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1c23a252300> ((None, ({'lexema': 'count', 'tipo': 'int ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos . LexToken(END,'end',19,226)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos END . LexToken(WRITE,'write',20,231)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1c23a252300>,'end'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto . LexToken(WRITE,'write',20,231)
   yacc.py: 473:Action : Reduce rule [desvio_WHILE -> <empty>] with [] and goto state 133
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE . LexToken(WRITE,'write',20,231)
   yacc.py: 469:Action : Reduce rule [comando_repetitivo_1 -> WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE] with ['while','(',None,True,None,')','do',None,None] and goto state 44
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 . LexToken(WRITE,'write',20,231)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE . LexToken(AP,'(',20,236)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP . LexToken(ID,'count',20,237)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP ID . LexToken(OPSOMA,'+',20,243)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1c23a3bfc70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP variavel . LexToken(OPSOMA,'+',20,243)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1c23a3bfc70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP fator . LexToken(OPSOMA,'+',20,243)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1c23a3bfc70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP termo . LexToken(OPSOMA,'+',20,243)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1c23a3bfc70> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP expressao_simples . LexToken(OPSOMA,'+',20,243)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP expressao_simples OPSOMA . LexToken(NUM_INT,50,20,245)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP expressao_simples OPSOMA NUM_INT . LexToken(FP,')',20,247)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [50] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1d30> (50)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP expressao_simples OPSOMA numero . LexToken(FP,')',20,247)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [50] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1d30> (50)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP expressao_simples OPSOMA fator . LexToken(FP,')',20,247)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [50] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1d30> (50)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP expressao_simples OPSOMA termo . LexToken(FP,')',20,247)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['count','+',50] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1d50> (51)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP expressao_simples . LexToken(FP,')',20,247)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [51] and goto state 24
   yacc.py: 506:Result : <int @ 0x7ffd1c1d1d50> (51)
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP expressao . LexToken(FP,')',20,247)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP expressao empty . LexToken(FP,')',20,247)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP expressao mais_parametros . LexToken(FP,')',20,247)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with [51,None] and goto state 100
   yacc.py: 506:Result : <list @ 0x1c2388f0bc0> ([51])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP lista_de_parametros . LexToken(FP,')',20,247)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',[51],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 chamada_de_procedimento . LexToken(FIM_LINHA,';',20,248)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 chamada_de_procedimento FIM_LINHA . LexToken(END,'end',21,250)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 chamada_de_procedimento FIM_LINHA empty . LexToken(END,'end',21,250)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',21,250)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',None] and goto state 76
   yacc.py: 506:Result : <tuple @ 0x1c23a252300> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 comandos . LexToken(END,'end',21,250)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_repetitivo_1 comandos] with [None,(None, None)] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x1c23a2446c0> ((None, (None, None)))
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',21,250)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1c23a3bf400>,';',<tuple @ 0x1c23a2446c0>] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x1c23a244540> (({'lexema': 'count', 'tipo': 'int', 'val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',21,250)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1c23a3bf380>,';',<tuple @ 0x1c23a244540>] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x1c23a244380> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA comandos . LexToken(END,'end',21,250)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1c23a3bf340>,';',<tuple @ 0x1c23a244380>] and goto state 76
   yacc.py: 506:Result : <tuple @ 0x1c23a255100> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 comandos . LexToken(END,'end',21,250)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_repetitivo_1 comandos] with [None,<tuple @ 0x1c23a255100>] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x1c23a252800> ((None, ({'lexema': 'y', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',21,250)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x1c23a252800>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1c23a2443c0> ((None, (None, ({'lexema': 'y', 'tipo': ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos . LexToken(END,'end',21,250)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos END . LexToken(PONTO_FINAL,'.',21,253)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1c23a2443c0>,'end'] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto . LexToken(PONTO_FINAL,'.',21,253)
   yacc.py: 445:Action : Shift and goto state 16
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 2
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL . None
   yacc.py: 473:Action : Reduce rule [fim_programa -> <empty>] with [] and goto state 38
   yacc.py: 548:Result : <NoneType @ 0x7ffd1c199880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 430:Defaulted state 38: Reduce using 1
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa . None
   yacc.py: 469:Action : Reduce rule [programa -> PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa] with ['program','while_1',';',<tuple @ 0x1c23a2445c0>,None,'.',None] and goto state 1
   yacc.py: 506:Result : <tuple @ 0x1c23a2445c0> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : programa . $end
   yacc.py: 571:Done   : Returning <tuple @ 0x1c23a2445c0> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 572:PLY: PARSE DEBUG END
